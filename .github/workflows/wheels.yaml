name: Build and test wheels

on:
  push:
    branches: [master]
    tags:
      - '*'
  pull_request:
    branches: [master]

jobs:
  wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-10.15]
        arch: [auto]

    steps:
      - name: Disable autocrlf
        run: |
            git config --global core.autocrlf false

      - uses: actions/checkout@v2

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2

      - uses: docker/setup-qemu-action@v1
        if: ${{ matrix.arch == 'aarch64' }}
        name: Set up QEMU

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_ENVIRONMENT_WINDOWS: >
            CMAKE_GENERATOR="${{ matrix.cmake_generator }}"
            CMAKE_GENERATOR_PLATFORM="${{ matrix.cmake_generator_platform }}"
            CMAKE_PREFIX_PATH="C:/Program Files/Mpark.Variant/"
            CMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH;C:/Program Files (x86)/Mpark.Variant/"
            CMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH;C:/Program Files/layered-file-protocols/"
            CMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH;C:/Program Files (x86)/layered-file-protocols/"

          CIBW_ARCHS_WINDOWS: ${{ matrix.cibw-arch }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_SKIP: pp* *-musllinux_* cp36* cp37* cp39* cp31*
          COMSPEC: C:\Program Files\PowerShell\7\pwsh.EXE

        run: |
            python -m cibuildwheel --output-dir wheelhouse python/

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs: wheels
    name: Publish wheels to PyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2

      - name: Publish wheels to PyPI

        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: artifact
